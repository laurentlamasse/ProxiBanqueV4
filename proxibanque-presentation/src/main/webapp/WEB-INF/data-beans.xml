<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd"
	default-autowire="byName">
	
	<context:annotation-config/>
	<context:component-scan base-package="com.gtm.proxibanque"/>
	
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/db.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="monLogger" class="com.gtm.proxibanque.logger.Logger"/>
	
	<!-- 1. Create datasource from JNDI DataSource provided by the container -->
	<jee:jndi-lookup id="datasource" jndi-name="java:/ProxibanqueDS" expected-type="javax.sql.DataSource" />
	
	<!-- <bean id="datasource" destroy-method="close"
	class="org.apache.commons.dbcp2.BasicDataSource">
	<property name="driverClassName" value="${db.driver}" />
	<property name="url" value="${db.url}"/>
	<property name="username" value="${db.username}"/>
	<property name="password" value="${db.password}"/>
	</bean> -->
	
	
	
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="datasource" />
		<property name="packagesToScan" value="com.gtm.proxibanque.domaine" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="MYSQL" />
				<property name="generateDdl" value="true" />
			</bean>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
	<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<!--	Debut de la configuration POA -->	
	<aop:config>
		<aop:pointcut id="servicePointcut"  expression="execution(* com.gtm.proxibanque.service.VirementService.createVirement(..))"/>    		
		<aop:aspect id="loggingAspect" ref="monLogger">
		    <aop:before method="logMethodEntry"  pointcut-ref="servicePointcut"/>
		    <aop:after-returning method="logMethodExitSucces" returning="resultat" pointcut-ref="servicePointcut"/>
	    </aop:aspect>	    
	</aop:config>
	<!--	Fin de la configuration POA -->
	
	<jpa:repositories base-package="com.gtm.proxibanque.dao"/>
	
	</beans>